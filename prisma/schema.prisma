
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./prod.db"
}

model User {
  id String @id @default(cuid())
  name String
  email String @unique
  password String
  avatar String?
  role String @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions Session[]
  comments Comment[]
  enrollments Enrollment[]
  orders Order[]
  certificates Certificate[]
}

model Session {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id String @id @default(cuid())
  image String
  title String
  description String
  price Float
  level String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean @default(false)

  lessons Lesson[]
  enrollments Enrollment[]
  orders Order[]
  certificates Certificate[]
}

model Lesson {
  id String @id @default(cuid())
  title String
  videoUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courseId String
  course Course @relation(fields: [courseId], references: [id])
  order Int @default(0)

  comments Comment[]
}

model Comment {
  id String @id @default(cuid())
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String
  user User @relation(fields: [userId], references: [id])
  lessonId String
  lesson Lesson @relation(fields: [lessonId], references: [id])
}

model Enrollment {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  courseId String
  course Course @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Certificate {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String
  user User @relation(fields: [userId], references: [id])
  courseId String
  course Course @relation(fields: [courseId], references: [id])
}

model Order {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  courseId String
  course Course @relation(fields: [courseId], references: [id])
  status String @default("PENDING")
  amount Float
  mayarTransactionId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}